{% extends 'base.html.twig' %}

{% block title %}Queueing System{% endblock %}

{% block body %}
<div class="container">
  <center>
    <h1>Home Page</h1>

    <video id="myVideo" width="640" height="390" controls autoplay onended="display()">
      Your browser does not support the video tag.
    </video>
    <div id="player"></div>
    <p id="title"></p>
    <br>

    <div id="items">
      {% if ctr < 5 %}  
        <a class="btn btn-primary" href="{{ path('add_items') }}">Add Youtube Link Item</a>
        <a class="btn btn-primary" href="{{ path('upload_items') }}">Upload MP4 File Item</a>
      {% else %}
        <div class="alert alert-success small-middle-container">
            <p>You can only Add 5 Item per hour</p>
        </div>  
      {% endif %} 
      <table id="itemTable" cellpadding="10">
      {% for item in items %}
          <tr>
          <td id="videoId">item : {{item.item.videoId}}</td> 
          {% if item.item.employee.id == app.user.employeeId.id %}
            <td><a id="remove" class="btn btn-danger deleteItem" onclick="removeSpecificItem({{ item.id }})" data-path="{{ path('remove_itemqueue', {id: item.id}) }}">Remove</a></td>
          {% else %}
            <td></td>            
          {% endif %}
            <td style='visibility:hidden'><a id="removeQueue" class="btn btn-danger deleteItem" onClick="deleteItem()" data-path="{{ path('remove_items', {id: item.id}) }}">Remove</a></td>
          </tr>
      {% endfor %}  
      </table>
    </div>
  </center>
</div>


<script>

  $("#itemTable").on("click", ".deleteItem", function(event){
    event.preventDefault();
    var deletePath = event.target.getAttribute("data-path");
    $.ajax({
        url: deletePath,
        type: "DELETE",
        success: function () {
          $('#itemTable').load(' #itemTable');
        }
    });
  });


  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');
  tag.src = "http://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '390',
      width: '640',
      playerVars: {
        autoplay: 0,
        controls: 1
      },
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  var videos = {{ items|json_encode|raw }};  


setInterval(
  function(){ 
    $.ajax({ 
      url: "{{ path('updateQueueItem') }}",
      type: 'GET',
      async: false,
      success: function (data) {
        $('#itemTable').load(' #itemTable');
        videos = data;
        console.log('ajax videos');
        console.log(videos);
        var id =  setInterval(checkVideos, 10);
        function checkVideos() {
          if (videos.length > 0) {
            document.getElementById("player").style.display = "block";
            document.getElementById("title").style.display = "block";    
            clearInterval(id);                
          }else{
            document.getElementById("player").style.display = "none";    
            document.getElementById("title").style.display = "none";    
          }
        }
      }
    });
    return videos;
  }, 5000);

  console.log(videos);
    

  var index = 0;
  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    if (videos[index].item.playlist) {
      event.target.cuePlaylist({
            listType: 'playlist',
            list: videos[index].item.playlist,
      });
    }else if(videos[index].item.uploadFilename){
      document.getElementById("player").style.display = "none";
      document.getElementById("myVideo").style.display = "block";  
      document.getElementById('myVideo').src = document.location.origin + '/uploads/' + videos[index].item.uploadFilename;      
      // document.getElementById('myVideo').currentTime = videos[index].startSeconds;     
      document.getElementById("title").innerHTML = 'Item ID: ' +videos[index].item.videoId+ ' Title: ' + videos[index].item.videoId;
    }else{
      event.target.cueVideoById({
        videoId: videos[index].item.videoId,
        startSeconds: videos[index].startSeconds,
      });
    }
    event.target.playVideo();
  }

  function onPlayerStateChange(event) {
    console.log("State change: " + event.data );
    if (event.data == YT.PlayerState.PLAYING){
      document.getElementById("title").innerHTML ='Item ID: '+ player.getVideoData().title;
    }

    if(event.data == YT.PlayerState.CUED && videos.length > 0){
        event.target.playVideo();      
    }

    if (event.data == YT.PlayerState.PAUSED){
      console.log(Math.round(player.getCurrentTime()) + ' item id ' + videos[index].id); 
      var duration = Math.round(player.getCurrentTime());
      var id = videos[index].id;
      $.ajax({ 
        url: "{{ path('updateQueueStartSeconds', {'id': 'replaceId' ,'duration': 'replaceDuration'}) }}".replace('replaceId',id).replace("replaceDuration", duration),
        type: 'POST',
        async: false,
        success: function (data) {
          console.log(data);
        }
      });
    }

    setInterval(
    function(){ 
    // var duration = getCurTime();
    // var id = videos[index].id;
    // $.ajax({ 
    //   url: "{{ path('updateQueueStartSeconds', {'id': 'replaceId' ,'duration': 'replaceDuration'}) }}".replace('replaceId',id).replace("replaceDuration", duration),
    //   type: 'POST',
    //   async: false,
    //   success: function (data) {
    //     console.log(data);
    //   }
    // });
      if (videos.length == 0 ) {
        event.target.stopVideo();
      }else if(videos[index].item.uploadFilename != null && videos[index].item.uploadFilename != document.getElementById('myVideo').src){
        //temporary
        // event.target.stopVideo();
        console.log('asdasdsa');
        document.getElementById("myVideo").style.display = "none";
        location.reload();
      }else if (videos[index].item.videoId != player.getVideoData()['video_id'] && videos[index].item.playlist != player.getPlaylistId() ) {
        checkQueue(index,event);
      }
    }, 3000);

    console.log('video');
    console.log(videos);  

    if ( event.data === YT.PlayerState.ENDED && player.getVideoLoadedFraction() > 0 ) {
      console.log(index);
      if (index < videos.length - 1) {
        index++;
        checkQueue(index,event);
        document.getElementById("removeQueue").click(); 
      }else{
        event.target.stopVideo();
        document.getElementById("removeQueue").click();
      }
           
    }
  }

  function display(){
    document.getElementById("myVideo").style.display = "none";
    document.getElementById("removeQueue").click();
    location.reload();
  }

  function deleteItem(){
    videos.shift();
  }

  function removeSpecificItem(id) {
    for( var i = 0; i < videos.length; i++){ 
      if ( videos[i].id === id) {
        videos.splice(i, 1); 
      }
    }
  }

  function checkQueue(index,event) {
      if (videos[index].item.playlist){
        event.target.loadPlaylist({
              listType: 'playlist',
              list: videos[index].item.playlist,
        });
        // document.getElementById("removeQueue").click();
      }else if(videos[index].item.uploadFilename){
        document.getElementById("player").style.display = "none";
        document.getElementById("myVideo").style.display = "block";
        document.getElementById('myVideo').src = document.location.origin + '/uploads/' + videos[index].item.uploadFilename;
        // document.getElementById('myVideo').currentTime = videos[index].startSeconds;
        document.getElementById("title").innerHTML = 'Title: ' + videos[index].item.videoId;
        // document.getElementById("removeQueue").click();
        // player.getIframe().src = "http://localhost:8000/uploads/9950170b0d61e65776b866d9e66e35c8.mp4";
      }else{
        event.target.loadVideoById({
          videoId: videos[index].item.videoId,
        });
        
        // document.getElementById("removeQueue").click();
      }
  }

  //hides the video tag
  document.getElementById("myVideo").style.display = "none";

// function getCurTime() { 
//   return parseInt(Math.round(document.getElementById("myVideo").currentTime));
// } 

if (videos.length == 0) {
  document.getElementById("player").style.display = "none";  
}

</script>

{% endblock %}
